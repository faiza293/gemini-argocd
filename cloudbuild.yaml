#### Build Frontend Docker Image ####
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend-app:$SHORT_SHA',
    './frontend'
  ]

#### Push Frontend Docker Image ####
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend-app:$SHORT_SHA'
  ]

#### Build Backend Docker Image ####
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '-t', 'northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend-app:$SHORT_SHA',
    './backend'
  ]

#### Push Backend Docker Image ####
- name: 'gcr.io/cloud-builders/docker'
  args: [
    'push',
    'northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend-app:$SHORT_SHA'
  ]

#### Update and Push Kubernetes Manifests ####
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: /bin/sh
  secretEnv: ['GIT_ACCESS_TOKEN']
  args:
  - '-c'
  - |
    git clone https://faiza293:$$GIT_ACCESS_TOKEN@github.com/faiza293/gemini-argocd.git
    cd gemini-argocd
    git checkout ${_CD_BRANCH} || git checkout -b ${_CD_BRANCH}
    
    echo "Updating frontend deployment with new image tag..."
    sed -i "s#image: .*#image: northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/frontend-app:$SHORT_SHA#g" frontend/frontend-deployment.yaml
    
    echo "Updating backend deployment with new image tag..."
    sed -i "s#image: .*#image: northamerica-northeast2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/backend-app:$SHORT_SHA#g" backend/backend-deployment.yaml
    
    echo "Committing and pushing updated Kubernetes manifests..."
    git config --global user.name "faiza mukve"
    git config --global user.email "faizafaazmukve@gmail.com"
    git add frontend/frontend-deployment.yaml backend/backend-deployment.yaml
    git commit -m "[Cloud Builder] Updated frontend and backend image tags to $SHORT_SHA"
    git push https://faiza293:$$GIT_ACCESS_TOKEN@github.com/faiza293/gemini-argocd.git ${_CD_BRANCH}

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_NUMBER/secrets/GIT_ACCESS_TOKEN/versions/latest
    env: 'GIT_ACCESS_TOKEN'

options:
  logging: CLOUD_LOGGING_ONLY
